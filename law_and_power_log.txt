import numpy as np
from skimage import data
from skimage import exposure
from skimage import img_as_ubyte
import matplotlib.pyplot as plt

# Load an example image
image = data.moon()

# Perform log transformation on the image
log_transformed = exposure.adjust_log(image, 1)

# Perform power-law transformation on the image
gamma_transformed = exposure.adjust_gamma(image, 2)

# Perform contrast stretching on the image
p2, p98 = np.percentile(image, (2, 98))
contrast_stretched = exposure.rescale_intensity(image, in_range=(p2, p98))

# Perform histogram equalization on the image
hist_eq = exposure.equalize_hist(image)

# Perform thresholding on the image
thresholded = image > 128

# Perform halftoning on the image
halftoned = img_as_ubyte(exposure.halftone(image))

# Plot the original and transformed images
plt.figure()
plt.subplot(2, 3, 1)
plt.imshow(image, cmap='gray')
plt.title('Original')
plt.subplot(2, 3, 2)
plt.imshow(log_transformed, cmap='gray')
plt.title('Log')
plt.subplot(2, 3, 3)
plt.imshow(gamma_transformed, cmap='gray')
plt.title('Power-law')
plt.subplot(2, 3, 4)
plt.imshow(contrast_stretched, cmap='gray')
plt.title('Contrast')
plt.subplot(2, 3, 5)
plt.imshow(hist_eq, cmap='gray')
plt.title('Histogram equalization')
plt.subplot(2, 3, 6)
plt.imshow(halftoned, cmap='gray')
plt.title('Halftoning')

# Plot the thresholded image
plt.figure()
plt.imshow(thresholded, cmap='gray')
plt.title('Thresholding')
plt.show()
