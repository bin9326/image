import numpy as np
from PIL import Image
from skimage import data
from skimage.feature import corner_harris, corner_peaks, blob_log, blob_dog
from skimage.feature import hog, haar_like_feature
from skimage.color import rgb2gray
import matplotlib.pyplot as plt

# Load an example image
image = Image.open("image.jpg")

# Convert the image to grayscale
gray_image = rgb2gray(np.array(image))

# Extract Harris corners
corners = corner_peaks(corner_harris(gray_image), min_distance=2)

# Extract Blobs using Laplacian of Gaussian (LoG)
blobs_log = blob_log(gray_image, max_sigma=30, num_sigma=10, threshold=.1)

# Extract Blobs using Difference of Gaussian (DoG)
blobs_dog = blob_dog(gray_image, max_sigma=30, threshold=.1)

# Extract Histogram of Oriented Gradients (HOG) features
hog_features, hog_image = hog(gray_image, visualize=True)

# Extract Haar-like features
haars = haar_like_feature(gray_image, 0, 0, 20, 20, 'type-2-x')

# Plot the original and feature extracted images
plt.figure()
plt.subplot(2, 2, 1)
plt.imshow(gray_image, cmap='gray')
plt.title('Original')
plt.scatter(corners[:, 1], corners[:, 0], color='cyan', marker='+', s=50)
plt.title('Corners')
plt.subplot(2, 2, 2)
plt.imshow(gray_image, cmap='gray')
plt.title('Original')
plt.scatter(blobs_log[:, 1], blobs_log[:, 0], color='cyan', marker='+', s=50)
plt.title('Blobs using LoG')
plt.subplot(2, 2, 3)
plt.imshow(gray_image, cmap='gray')
plt.title
